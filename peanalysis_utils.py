#-*- coding: utf-8 -*-
#import ssdeep
import hashlib

class utils:

    def get_hashes(data,isFile):
    if isFile = True:
        with open(file, 'rb') as afile:
            buf = afile.read()
            md5_hash = hashlib.md5()
            sha1_hash = hashlib.sha1()
            sha256_hash = hashlib.sha256()
            #ssdeep_hash = ssdeep.Hash()

            md5_hash.update(buf)
            sha1_hash.update(buf)
            sha256_hash.update(buf)
            #ssdeep_hash.update(bytes(data))
            #return #ssdeep_hash.digest()
        return md5_hash.hexdigest(), sha1_hash.hexdigest(), sha256_hash.hexdigest()


    def get_entropy(data, size):
        if len(data) == 0:
            return 0.0

            occurences = Counter(data)
            entropy = 0

        for x in occurences.values():
            p_x = float(x) / size
            entropy -= p_x * math.log(p_x, 2)
        return entropy
