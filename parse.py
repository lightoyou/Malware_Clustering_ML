#!/usr/bin/env python
#-*- coding: utf-8 -*-
import os
import lief
from lief import to_json
import json
import pprint
import hashlib
import numpy as np


pp = pprint.PrettyPrinter(indent=4)

AllFiles = []
AllFilesHashes = []
AllPE = []
AllRootPath = []

PathDataset = "dataset/"


#data_directories

for root, subFolders, files in os.walk(PathDataset):
    for file in files:
        PathDataset = os.path.join(root, file)
        rootPath = os.path.join(root)
        AllRootPath.append(rootPath)
        AllFiles.append(PathDataset)

dictHashes = {}
i = 0
for file in AllFiles:
    hasher_md5 = hashlib.md5()
    hasher_sha256 = hashlib.sha256()
    with open(file, 'rb') as afile:
             buf = afile.read()
             hasher_md5.update(buf)
             hasher_sha256.update(buf)
             dictHashes['path'] = AllRootPath[i]
             dictHashes['hash_md5'] = hasher_md5.hexdigest()
             dictHashes['hash_sha256'] = hasher_sha256.hexdigest()
             AllFilesHashes.append(dictHashes)
    i += 1

for p in AllFiles:
    try:
        pe = lief.parse(p)
        pe_json = to_json(pe)
        pp.pprint(json.loads(pe_json))
        AllPE.append(pe)
    except:
        pass

i = 0
for p in AllPE:
    json_data = json.loads(to_json(p))
    print(AllFilesHashes)

    with open( "file_" + md5,'w') as f:
        f.write(json.dumps(json_data, indent=4))
    i += 1
