import glob
import json
from redis_management import RedisManagement
from collections import OrderedDict
from ml_helpers import ml_helpers
import numpy as np

PathDataset = "/home/light/Documents/Cours_CDSI/ML/dataset/theZoo/malwares/Binaries/"

rmgt = RedisManagement('malwares')

features = ["number_of_sections","median_of_entropy","nb_of_imports"]

AllJSONFiles = [ json.load(open(path))for path in glob.glob('jsonfiles/*')]

for j in AllJSONFiles:
    malware = OrderedDict()
    malware[features[0]] = j['nb_sections']
#    malware[features[1]] = sum( sec['entropy'] for sec in j['sections']) / j['nb_sections']
#    malware[features[2]] = sum(len(v) for k,v in j['imported_fonction'].items())
    rmgt.record_vector(j['hashes']['sha256'],'first_vector',malware)
    rmgt.record_malware_label(j['hashes']['sha256'],j['path'],PathDataset)

ml_h = ml_helpers(rmgt.redis_client)
mat = ml_h.create_matrix('first_vector')
print(mat.shape)
np.save('matrix_first_vector', mat)
